//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ifun.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class iFunEntities : DbContext
    {
        public iFunEntities()
            : base("name=iFunEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Expens> Expenses { get; set; }
        public virtual DbSet<ExpenseTransaction> ExpenseTransactions { get; set; }
        public virtual DbSet<GamePrice> GamePrices { get; set; }
        public virtual DbSet<Gamesystem> Gamesystems { get; set; }
        public virtual DbSet<IncomeTransaction> IncomeTransactions { get; set; }
        public virtual DbSet<NumberOfSystem> NumberOfSystems { get; set; }
    
        public virtual ObjectResult<GenerateDailyReport_SP_Result> GenerateDailyReport_SP(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerateDailyReport_SP_Result>("GenerateDailyReport_SP", reportDateParameter);
        }
    
        public virtual ObjectResult<GenerateMonthlyReport_SP_Result> GenerateMonthlyReport_SP(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerateMonthlyReport_SP_Result>("GenerateMonthlyReport_SP", reportDateParameter);
        }
    
        public virtual ObjectResult<GenerateYearlyReport_SP_Result> GenerateYearlyReport_SP(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerateYearlyReport_SP_Result>("GenerateYearlyReport_SP", reportDateParameter);
        }
    }
}
